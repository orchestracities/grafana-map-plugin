{"version":3,"sources":["../../src/utils/map_utils.js"],"names":["drawPopups","panelId","lastValueMeasure","validatedMetrics","hideAllGraphPopups","document","querySelector","options","length","drawMeasuresPopup","type","aqiIndex","calculateAQIIndex","value","getElementById","style","display","drawHealthConcernsPopup","AQI","risks","color","meaning","drawTrafficFlowPopup","drawDefaultPopups","error","console","log","getDataPointExtraFields","dataPoint","values","fillOpacity","aqiColor","fillColor","aqiMeaning","aqiRisk","aqi","markerColor","colorIndex","calculateCarsIntensityIndex","CARS_COUNT","getMapMarkerClassName","resp","classColor","getDataPointStickyInfo","metricsTranslations","dataPointExtraFields","stickyInfo","getDataPointDetails","join","withoutGeojson","Object","keys","filter","key","translatedValues","map","dpKey","dP","Date","toLocaleString","trans","elem","translatedValue","name","unit","getSelectedCity","vars","selectedVarName","cityEnv","city","current","map_table_popups","map_table_popup","popup","risk","map_size","healthConcernsWrapper","healthConcerns","healthConcernsColor","healthRisk","backgroundColor","innerHTML","metricsToShow","providedMetrics","measuresTable","rows","deleteRow","forEach","metric","row","insertRow","innerCell0","innerCell1","cell0","insertCell","cell1","getCityCoordinates","city_name","url","NOMINATIM_ADDRESS","replace","fetch","then","response","json","data","latitude","lat","longitude","lon","range","index","convertDate","time_","time","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","UTC","geolocationOptions","enableHighAccuracy","timeout","maximumAge"],"mappings":"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","sourcesContent":["// draw components in the map\n/* Vendor specific */\nimport { defaults, isEqual } from 'lodash';\n\nimport config from 'app/core/config';\n\n/* Grafana Specific */\n\nimport { titleize } from './string';\n\n/* App specific */\nimport { AQI, CARS_COUNT, NOMINATIM_ADDRESS } from '../definitions';\n\n/*\n* Primary functions\n*/\n\n/**\n* Display popups based in the click in map's marker\n*/\nfunction drawPopups(panelId, lastValueMeasure, validatedMetrics) {\n  // render popups\n  try {\n    // Show Metrics Legend (MAP)\n\n    // draw select\n    if (validatedMetrics) {\n      hideAllGraphPopups(panelId);\n\n      if (document.querySelector('#parameters_dropdown_' + panelId).options.length > 1) drawMeasuresPopup(panelId, lastValueMeasure, validatedMetrics);\n\n      switch (lastValueMeasure.type) {\n        case 'AirQualityObserved':\n          const aqiIndex = calculateAQIIndex(lastValueMeasure.value);\n\n          document.getElementById('environment_table_' + panelId).style.display = 'block';\n\n          drawHealthConcernsPopup(panelId, AQI.risks[aqiIndex], AQI.color[aqiIndex], AQI.meaning[aqiIndex]);\n\n          break;\n        case 'TrafficFlowObserved':\n          drawTrafficFlowPopup(panelId);\n          break;\n        default:\n          drawDefaultPopups(panelId);\n      }\n    }\n  } catch (error) {\n    console.log('Error:');\n    console.log(error);\n    console.log('lastValueMeasure: ');\n    console.log(lastValueMeasure);\n  }\n}\n\n/**\n* private functions\n*/\nfunction getDataPointExtraFields(dataPoint) {\n  const values = {\n    fillOpacity: 0.5\n  };\n\n  if (dataPoint.type === 'AirQualityObserved') {\n    const aqiIndex = calculateAQIIndex(dataPoint.value);\n    const aqiColor = AQI.color[aqiIndex];\n\n    defaults(values, {\n      color: aqiColor,\n      fillColor: aqiColor,\n\n      aqiColor: aqiColor,\n      aqiMeaning: AQI.meaning[aqiIndex],\n      aqiRisk: AQI.risks[aqiIndex],\n      aqi: dataPoint.value,\n\n      markerColor: AQI.markerColor[aqiIndex]\n    });\n  } else if (dataPoint.type === 'TrafficFlowObserved') {\n    const colorIndex = calculateCarsIntensityIndex(dataPoint.value);\n\n    defaults(values, {\n      color: CARS_COUNT.color[colorIndex],\n      fillColor: CARS_COUNT.color[colorIndex],\n\n      markerColor: CARS_COUNT.markerColor[colorIndex]\n    });\n  }\n\n  return values;\n}\n\nfunction getMapMarkerClassName(type, value) {\n  const resp = 'map-marker-';\n  if (type === 'AirQualityObserved') {\n    return resp + AQI.classColor[calculateAQIIndex(value)];\n  } if (type === 'TrafficFlowObserved') return resp + CARS_COUNT.classColor[calculateCarsIntensityIndex(value)];\n  return resp + 'default';\n}\n\nfunction getDataPointStickyInfo(dataPoint, metricsTranslations) {\n  const dataPointExtraFields = getDataPointExtraFields(dataPoint);\n  let stickyInfo = '<div class=\"stycky-popup-info\">';\n\n  if (dataPoint.type === 'AirQualityObserved') {\n    stickyInfo += '<div class=\"head air-quality\">Air Quality</div>';\n  } else if (dataPoint.type === 'TrafficFlowObserved') {\n    stickyInfo += '<div class=\"head traffic-flow\">Cars Intensity</div>';\n  } else {\n    stickyInfo += '<div class=\"head\">' + dataPoint.type + '</div>';\n  }\n\n  // body\n  stickyInfo += '<div class=\"body\">';\n  stickyInfo += getDataPointDetails(dataPoint, metricsTranslations).join('');\n  stickyInfo += '</div>';\n  stickyInfo += '</div>';\n\n  // console.debug(dataPoint)\n  return stickyInfo;\n}\n\nfunction getDataPointDetails(dataPoint, metricsTranslations) {\n  const withoutGeojson = Object.keys(dataPoint).filter((key) => key !== 'geojson');\n  const translatedValues = withoutGeojson.map((dpKey) => {\n    const dP = (dpKey === 'created_at' ? new Date(dataPoint[dpKey]).toLocaleString() : dataPoint[dpKey]);\n    const trans = metricsTranslations.filter((elem) => elem[0] === dpKey);\n    return { 'name': (trans.length > 0 && trans[0][1] ? trans[0][1] : titleize(dpKey)), 'value': dP || '-', 'unit': (trans.length > 0 ? trans[0][2] : '') };\n  });\n  // creation of html row\n  return translatedValues.map((translatedValue) => `<div><span>${translatedValue.name}</span><span>${translatedValue.value} ${translatedValue.unit || ''}</span></div>`);\n}\n\n// show all accepted metrics for a specific point id\n// function getMetricsToShow(allMetrics, id) {\n//   const metricsToShow = {};\n//   for (const key in allMetrics) {\n//     allMetrics[key].forEach((_value) => {\n//       if (_value.id === id) {\n//         if (_value.value) {\n//           if (!(metricsToShow[key])){\n//             metricsToShow[key] = 0;\n//           }\n//           metricsToShow[key] = _value.value;\n//         }\n//       }\n//     });\n//   }\n\n//   //  metricsToShow['aqi'] = aqi;\n//   return metricsToShow\n// }\n\n// Given vars passed as param, retrieves the selected city\nfunction getSelectedCity(vars, selectedVarName) {\n  const cityEnv = vars.filter((elem) => elem.name === selectedVarName);\n\n  let city = null;\n  if (cityEnv && cityEnv.length === 1) city = cityEnv[0].current.value;\n\n  return city;\n}\n\nfunction hideAllGraphPopups(panelId) {\n  const map_table_popups = ['measures_table', 'health_concerns_wrapper', 'environment_table', 'traffic_table'];\n\n  for (const map_table_popup of map_table_popups) {\n    const popup = document.getElementById(map_table_popup + '_' + panelId);\n    if (popup) popup.style.display = 'none';\n  }\n}\n\nfunction drawDefaultPopups() {\n}\n/*\n* Draw Traffic Flow Popup\n*/\nfunction drawTrafficFlowPopup(panelId) {\n  document.getElementById('traffic_table_' + panelId).style.display = 'block';\n}\n/*\n* Draw Health Concerns Popup\n*/\nfunction drawHealthConcernsPopup(panelId, risk, color, meaning, map_size) {\n  const healthConcernsWrapper = document.getElementById('health_concerns_wrapper_' + panelId);\n  const healthConcerns = document.querySelector('#health_concerns_wrapper_' + panelId + '>div');\n  const healthConcernsColor = document.querySelector('#health_concerns_wrapper_' + panelId + '>div>span>span.color');\n  const healthRisk = document.getElementById('health_risk_' + panelId);\n\n  healthConcernsWrapper.style.display = 'block';\n  healthConcernsColor.style.backgroundColor = color;\n  healthRisk.innerHTML = risk;\n}\n/*\n* Draw Measures Popup - The popup info is related with the choosed value\n*  from select box and with the metrics that came from result set\n*  and from a list of what to show metrics\n*/\nfunction drawMeasuresPopup(panelId, metricsToShow, providedMetrics) {\n  const measuresTable = document.querySelector('#measures_table_' + panelId + ' > table > tbody');\n  while (measuresTable.rows[0]) measuresTable.deleteRow(0);\n\n  Object.keys(metricsToShow).forEach((metric) => {\n    providedMetrics.forEach((elem) => {\n      if (elem[0] == metric) {\n        const row = measuresTable.insertRow(); // -1 for inserting bottom\n        const innerCell0 = elem[1] ? elem[1] : titleize(elem[0]);\n        const innerCell1 = (metricsToShow[metric] ? metricsToShow[metric] : '-') + (elem[2] ? ` ${elem[2]}` : '');\n        const cell0 = row.insertCell(0);\n        const cell1 = row.insertCell(1);\n\n        cell0.innerHTML = innerCell0;\n        cell1.innerHTML = innerCell1;\n      }\n    });\n  });\n\n  document.getElementById('measures_table_' + panelId).style.display = 'block';\n}\n\n// Access remote api and gives the coordinates from a city center based on NOMINATIM url server\nfunction getCityCoordinates(city_name) {\n  const url = NOMINATIM_ADDRESS.replace('<city_name>', city_name);\n  return fetch(url)\n    .then((response) => response.json())\n    .then((data) => { return { latitude: data[0].lat, longitude: data[0].lon }; })\n    .catch((error) => console.error(error));\n}\n\n// gets the aqi index from the AQI var\nfunction calculateAQIIndex(value) {\n  let aqiIndex;\n  AQI.range.forEach((elem, index) => {\n    if (value >= elem) {\n      aqiIndex = index;\n    }\n  });\n  return aqiIndex;\n}\n// gets the index from the CARS_COUNT const var\nfunction calculateCarsIntensityIndex(value) {\n  CARS_COUNT.range.forEach((elem, index) => {\n    if (value >= elem) {\n      return index;\n    }\n  });\n  return 0;\n}\n\n/*\n* Auxiliar functions\n*/\n// just for improve DRY\nfunction convertDate(time_) {\n  const time = new Date(time_);\n  const day = time.getDate();\n  const month = time.getMonth();\n  const year = time.getFullYear();\n  const hour = time.getHours() - 1;\n  const minutes = time.getMinutes();\n  const seconds = time.getSeconds();\n  const milliseconds = time.getMilliseconds();\n  return Date.UTC(year, month, day, hour + 1, minutes, seconds, milliseconds);\n}\n\nconst geolocationOptions = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 110\n};\n\nexport {\n\n  hideAllGraphPopups,\n\n  getCityCoordinates,\n\n  getDataPointExtraFields,\n  getDataPointStickyInfo,\n\n  getSelectedCity,\n\n  getMapMarkerClassName,\n\n  geolocationOptions\n};\n"],"file":"map_utils.js"}